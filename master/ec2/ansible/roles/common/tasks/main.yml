---

- name: check if running on cloud
  stat:
    path: /var/lib/cloud
  register: cloud

- name: Wait for updates / upgrades from user data script to release lock
  script: wait-for-apt-on-startup.sh
  when: cloud.stat.exists

- name: Update and upgrade apt packages
  become: true
  apt:
    update_cache: yes
    upgrade: "yes" # Needs to be quoted
    force_apt_get: yes
    cache_valid_time: 86400 #One day

- name: Add Docker GPG key
  apt_key:
    url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
    state: present

- name: Add Docker APT repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable

- name: Install required packages
  apt:
    name: "{{ packages }}"
    force_apt_get: yes
    state: present
  vars:
    packages:
      - apt-transport-https
      - ca-certificates
      - software-properties-common
      - python
      - python3
      - python-apt
      - python3-apt
      - python-pip
      - python3-pip
      - awscli
      - docker-ce
      - curl
      - jq
      - rsync

- name: Install required packages (Ubuntu only)
  apt:
    name: "{{ packages }}"
    force_apt_get: yes
    state: present
  vars:
    packages:
      - linux-aws
  when: ansible_distribution == 'Ubuntu'

- name: Create hard core limit file
  file:
    path: /etc/security/limits.d/10.hardcore.conf
    mode: '0644'
    state: touch
    owner: root
    group: root

- name: Add user to docker group
  user:
    name: ubuntu
    groups: docker
    append: yes

- name: Install pip3 packages
  pip:
    name: "{{ pippkgs }}"
    executable: pip3
    state: present
  vars:
    pippkgs:
      - pip
      - docker
      - docker-compose
      - PyYAML

